1. tem main, #include, headers (que indicam as funções/variáveis a serem utilizadas)
2. gcc -o programa programa.c
3. [tipo] nomeVar -> Guarda um espaço de mem do tamanho definido para o tipo da var
4.
vetor caracteres -> char str[10];
vetor inteiro -> int valores[10];
[x] -> está a definir-se um tamanho estático;
5. uma var que aponta para o local da memória de outra var. p=&i;
6. sim
7. ele aponta para o seguinte endereço de mem
8. *p
9. é um ficheiro que guarda as funções e as bibliotecas utilizadas
10.
11.
12. Faz os comandos definidos no ficheiro, com parâmetros definidos pelo utilizador
13. 5/5/O apontador apontava para o endereço de mem
(PERGUNTAS ABAIXO)

1. Qual é a estrutura de um programa?
2. Como é que ele é compilado e linkado?
3. Como posso declarar uma var do tipo int, float ou char?
4. Como posso declarar um vetor de inteiro se um vetor de caracteres (string)?
5. O que é um apontador?
6. Um apontador guarda um endereço de memória?
7. O que acontece se incremento um apontador?
8. Como é que posso ir buscar o valor para onde o apontador aponta?
9. O que é o ficheiro "header" no C?
10. Escreva um programa que receba 2 valores inteiros no terminal através da função scanf() e que apresente no ecrã a sua soma.
11. Escreva um programa que receba uma palavra no ecrã e que apresente no ecrã essa palavra ao contrário.
12. O que faz o comando make quando definimos um ficheiro makefile?
13. Suponha que tenho o seguinte código:
int a = 4;
int *p;
p = &a;
*p = *p + 1;
Qual é o valor de a no final? Qual é o valor de *p? Se executasse a instrução p = p + 1 em vez de *p = *p + 1 o que mudava?